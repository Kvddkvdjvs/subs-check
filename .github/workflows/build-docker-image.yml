# 给这个自动化流程起个名字
name: Build and Push Docker Image

# 触发条件：当有任何代码被推送到 master 分支时，自动运行
on:
  push:
    branches: [ "master" ] # 注意：您的主分支是 master

# 任务列表
jobs:
  build-and-push:
    # 运行环境：使用最新的 Ubuntu 系统
    runs-on: ubuntu-latest

    # 授权：给予这个任务写入 Docker 镜像的权限
    permissions:
      contents: read
      packages: write

    # 步骤
    steps:
      # 第一步：下载您的代码到云端服务器
      - name: Checkout repository
        uses: actions/checkout@v4

      # [新增的关键一步] 第二步：自动整理和更新“代码的户口本”
      - name: Tidy go.mod and go.sum
        run: go mod tidy

      # 第三步：登录到 GitHub 的 Docker 镜像仓库
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 第四步：获取元数据（比如镜像的名称和标签）
      - name: MEtadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      # 第五步：构建 Docker 镜像并推送到仓库
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
